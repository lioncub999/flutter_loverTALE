import 'dart:convert';import 'dart:ui';import 'package:card_swiper/card_swiper.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_lover_tale/apis/couple_apis.dart';import 'package:flutter_lover_tale/helper/custom_date_util.dart';import 'package:flutter_lover_tale/models/couple_model.dart';import 'package:flutter_lover_tale/screens/initial/couple/sign_couple_screen.dart';import 'package:flutter_svg/svg.dart';import '../../apis/apis.dart';import '../../main.dart';// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓// ┃                                                                             ┃// ┃                                 메인 홈 화면                                ┃// ┃                                                                             ┃// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛class MainScreen extends StatefulWidget {  const MainScreen({super.key});  @override  State<MainScreen> createState() => _MainScreenState();}class _MainScreenState extends State<MainScreen> {  // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━<State>━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓  // 하단 캐러샐 버튼 관리용 (0 = 다이어리, 1 = 추억 지도)  int buttonState = 0;  // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━<State>━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛  @override  Widget build(BuildContext context) {    // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓    // ┃★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆┃    // ┃★☆★☆★☆★☆★☆★☆★☆★☆★☆화면★☆★☆★☆★☆★☆★☆★☆★☆┃    // ┃★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆┃    // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛    // overflow 방지용 스크롤 뷰    return SingleChildScrollView(      child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [        Padding(          padding: EdgeInsets.only(top: mq.height * .01, left: mq.width * .05, right: mq.width * .05),          // ┏━━━━━━━━━━━━━━━┓          // ┃  상단 콘텐츠  ┃          // ┗━━━━━━━━━━━━━━━┛          child: Row(            children: [              // 상단 - 메인 사진              SizedBox(                  width: mq.width * .45,                  height: mq.height * .2,                  child: SizedBox(                    width: mq.width * .45,                    height: mq.width * .45,                    // 커플 대표 사진 가져 오기 (커플 등록 확인)                    child: APIs.me.coupleId.isNotEmpty                        ? Image.asset("$commonPath/main/main_default.png")                        : SvgPicture.asset("$commonPath/main/main_noCouple_default.svg"),                  )),              // 상단 - 기념일              FutureBuilder(                  future: CoupleAPIs.getCoupleInfo(APIs.me),                  builder: (context, snapshot) {                    if (snapshot.connectionState == ConnectionState.waiting) {                      return const Text("");                    } else if (snapshot.hasError) {                      return Text("Error : ${snapshot}");                    } else {                      final data = snapshot.data?.docs;                      // API로 받아온 데이터 Couple 에 저장                      List<Couple> _coupleInfo = data?.map((e) => Couple.fromJson(e.data())).toList() ?? [];                      String loveDate = CustomDateUtil.getRelDate(context: context, loveStartDate: _coupleInfo[0].loveStartDay);                      DateTime loveStartDate = DateTime.fromMillisecondsSinceEpoch(int.parse(_coupleInfo[0].loveStartDay));                      // 100일 단위 기념일 계산                      List<dynamic> hundredDayAnniversaries = CustomDateUtil.calculateAnniversariesInRange(loveStartDate, 100, 2, 365);                      // 1년 단위 기념일 계산                      List<dynamic> yearAnniversaries = CustomDateUtil.calculateAnniversariesYear(loveStartDate, 2, 100);                      // 계산된 리스트 합치고 정렬                      List<dynamic> anniversaryList = hundredDayAnniversaries + yearAnniversaries;                      anniversaryList.sort((a, b) => a['date'].compareTo(b['date']));                      return SizedBox(                          width: mq.width * .45,                          height: mq.height * .2,                          child: Column(                            children: [                              // 기념일 - 우리가 연결된 지                              SizedBox(                                width: mq.width * .45,                                height: mq.height * .025,                                child: Row(                                  crossAxisAlignment: CrossAxisAlignment.center,                                  children: [                                    SizedBox(                                      width: mq.width * .05,                                      child: Image.asset('$commonPath/main/main_heart.png'),                                    ),                                    const Text("우리가 연결된 지")                                  ],                                ),                              ),                              // 기념일 - 사귄 날                              SizedBox(                                width: mq.width * .45,                                height: mq.height * .06,                                child: Row(                                  mainAxisAlignment: MainAxisAlignment.center,                                  crossAxisAlignment: CrossAxisAlignment.end,                                  children: [                                    // 커플 등록 안되어 있을때 처리                                    APIs.me.coupleId.isNotEmpty                                        ? Text("+ $loveDate",                                            style: TextStyle(                                                fontSize: mq.width * .1, fontWeight: FontWeight.w900, color: const Color.fromRGBO(255, 122, 122, 1)))                                        : Text("+ 999",                                            style: TextStyle(                                                fontSize: mq.width * .1, fontWeight: FontWeight.w900, color: const Color.fromRGBO(255, 122, 122, 1))),                                    Text(" 일", style: TextStyle(fontSize: mq.width * .04, color: greyColor))                                  ],                                ),                              ),                              // 기념일 - 가까운 기념일                              SizedBox(                                width: mq.width * .45,                                height: mq.height * .11,                                child: Column(                                  crossAxisAlignment: CrossAxisAlignment.start,                                  children: [                                    SizedBox(                                      height: mq.height * .02,                                      child: Text(                                        "   가까운 기념일",                                        style: TextStyle(fontSize: mq.width * .03),                                      ),                                    ),                                    Padding(                                      padding: EdgeInsets.only(top: mq.width * .02),                                      child: SizedBox(                                        height: mq.height * .08,                                        child: Stack(                                          children: [                                            // 커플 등록 안되어 있을때 처리                                            APIs.me.coupleId.isNotEmpty                                                ? ListView.builder(                                                    itemCount: anniversaryList.length,                                                    itemBuilder: (context, index) {                                                      return Container(                                                        padding: EdgeInsets.symmetric(horizontal: mq.width * .02),                                                          child: anniversaryList[index]['type'] == 'day_after'                                                              ? Row(                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                                  children: [                                                                    Text("+${anniversaryList[index]['difference']}일",                                                                        style: TextStyle(color: greyColor)),                                                                    Text(                                                                        CustomDateUtil.getOrgTime(                                                                            context: context,                                                                            date: anniversaryList[index]['date'],                                                                            returnType: "onlyDot"),                                                                        style: TextStyle(color: greyColor))                                                                  ],                                                                )                                                              : Row(                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                                  children: [                                                                    Text("+${anniversaryList[index]['difference']}주년",                                                                        style: TextStyle(color: greyColor)),                                                                    Text(                                                                        CustomDateUtil.getOrgTime(                                                                            context: context,                                                                            date: anniversaryList[index]['date'],                                                                            returnType: "onlyDot"),                                                                        style: TextStyle(color: greyColor))                                                                  ],                                                                ));                                                    })                                                :                                                // 기념일 - 가까운 기념일 - 커플 미등록                                                Padding(                                                    padding: EdgeInsets.symmetric(horizontal: mq.width * .033),                                                    child: ListView(                                                      children: [                                                        Row(                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                          children: [                                                            Text("+000일", style: TextStyle(color: greyColor)),                                                            Text("-", style: TextStyle(color: greyColor))                                                          ],                                                        ),                                                        Row(                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                          children: [                                                            Text("+000일", style: TextStyle(color: greyColor)),                                                            Text("-", style: TextStyle(color: greyColor))                                                          ],                                                        ),                                                        Row(                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                          children: [                                                            Text("+0주년", style: TextStyle(color: greyColor)),                                                            Text("-", style: TextStyle(color: greyColor))                                                          ],                                                        ),                                                        Row(                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                          children: [                                                            Text("+000일", style: TextStyle(color: greyColor)),                                                            Text("-", style: TextStyle(color: greyColor))                                                          ],                                                        ),                                                        Row(                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                          children: [                                                            Text("+000일", style: TextStyle(color: greyColor)),                                                            Text("-", style: TextStyle(color: greyColor))                                                          ],                                                        ),                                                        Row(                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                                                          children: [                                                            Text("+0주년", style: TextStyle(color: greyColor)),                                                            Text("-", style: TextStyle(color: greyColor))                                                          ],                                                        ),                                                      ],                                                    ),                                                  ),                                            // 가까운 기념일 하단 블러 처리                                            Positioned(                                              bottom: 0,                                              left: 0,                                              right: 0,                                              child: IgnorePointer(                                                child: Container(                                                  height: mq.height * .05, // Adjust the height as needed                                                  decoration: const BoxDecoration(                                                    gradient: LinearGradient(                                                      begin: Alignment.topCenter,                                                      end: Alignment.bottomCenter,                                                      colors: [                                                        Color.fromRGBO(245, 245, 245, 0),                                                        Color.fromRGBO(245, 245, 245, 0.5),                                                        Color.fromRGBO(245, 245, 245, 0.7),                                                        Color.fromRGBO(245, 245, 245, 0.9),                                                      ],                                                    ),                                                  ),                                                ),                                              ),                                            ),                                          ],                                        ),                                      ),                                    )                                  ],                                ),                              )                            ],                          ));                    }                  }),            ],          ),        ),        // ┏━━━━━━━━━━━━━━━━━━━━━━┓        // ┃  중앙 사진첩 콘텐츠  ┃        // ┗━━━━━━━━━━━━━━━━━━━━━━┛        SizedBox(          width: mq.width,          height: mq.height * .2,          child: ListView(            scrollDirection: Axis.horizontal,            children: [              SizedBox(                width: mq.width * .05,                height: mq.width * .4,              ),              SizedBox(                width: mq.width * .4,                height: mq.width * .4,                child: APIs.me.coupleId.isNotEmpty                    ? Image.asset('$commonPath/main/spring_trip.png')                    : SvgPicture.asset("$commonPath/main/main_noCouple_trip.svg"),              ),              SizedBox(                width: mq.width * .4,                height: mq.width * .4,                child: APIs.me.coupleId.isNotEmpty                    ? Image.asset('$commonPath/main/summer_trip.png')                    : SvgPicture.asset("$commonPath/main/main_noCouple_trip.svg"),              ),              SizedBox(                width: mq.width * .4,                height: mq.width * .4,                child: APIs.me.coupleId.isNotEmpty                    ? Image.asset('$commonPath/main/summer_trip.png')                    : SvgPicture.asset("$commonPath/main/main_noCouple_trip.svg"),              ),            ],          ),        ),        // ┏━━━━━━━━━━━━━━━┓        // ┃  하단 캐러셀  ┃        // ┗━━━━━━━━━━━━━━━┛        APIs.me.coupleId.isNotEmpty            ? SizedBox(                width: mq.width,                height: mq.height * .2,                // 하단 캐러샐 - 그림                child: Swiper(                  pagination: SwiperPagination(                      margin: EdgeInsets.zero,                      builder: SwiperCustomPagination(builder: (context, config) {                        return Row(                          children: <Widget>[                            Expanded(                              child: Align(                                alignment: Alignment.bottomCenter,                                child: Container(                                  child: DotSwiperPaginationBuilder(color: unselectGreyColor, activeColor: greyColor, size: 8.0, activeSize: 8.0)                                      .build(context, config),                                ),                              ),                            )                          ],                        );                      })),                  itemBuilder: (context, index) {                    return Container(                      margin: EdgeInsets.only(bottom: mq.width * .05),                      child: [SvgPicture.asset('$commonPath/main/main_diary.svg'), SvgPicture.asset('$commonPath/main/main_map.svg')][index],                    );                  },                  onIndexChanged: (value) => {                    setState(() {                      buttonState = value;                    })                  },                  itemCount: 2,                  loop: false,                  viewportFraction: .5,                  scale: .4,                  containerWidth: mq.width,                  fade: .1,                ))            :            // 커플 미등록 시 하단 그림 처리            SizedBox(                width: mq.width,                height: mq.height * .2,                child: SvgPicture.asset("$commonPath/main/main_noCouple_bottom.svg"),              ),        // 하단 캐러샐 - 버튼        SizedBox(          width: mq.width,          height: mq.height * .08,          child: Center(            child: APIs.me.coupleId.isNotEmpty                ? buttonState == 0                    ?                    // 홈 - 다이어리 쓰러 가기 버튼                    Container(                        decoration: BoxDecoration(borderRadius: BorderRadius.circular(15), boxShadow: const [                          BoxShadow(                            color: Color.fromRGBO(250, 210, 192, 1.0),                            spreadRadius: 2, // 그림자 퍼짐 정도                            blurRadius: 3, // 그림자의 흐려짐 정도                            offset: Offset(0, 2), // 그림자의 위치 (x축, y축 이동값)                          )                        ]),                        child: ElevatedButton(                          onPressed: () {},                          style: ElevatedButton.styleFrom(                              fixedSize: Size(mq.width * .5, mq.height * .06),                              backgroundColor: const Color.fromRGBO(255, 135, 81, 1.0),                              padding: EdgeInsets.zero,                              shadowColor: Colors.transparent,                              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15))),                          child: Row(                            crossAxisAlignment: CrossAxisAlignment.center,                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,                            children: [                              Text(" 다이어리 쓰러 가기", style: TextStyle(color: baseWhite, fontSize: mq.width * .05, fontWeight: FontWeight.w700)),                              SvgPicture.asset('$commonPath/icon/pencil_icon.svg')                            ],                          ),                        ),                      )                    :                    // 홈 - 지도 보기 버튼                    Container(                        decoration: BoxDecoration(borderRadius: BorderRadius.circular(15), boxShadow: const [                          BoxShadow(                            color: Color.fromRGBO(250, 210, 192, 1.0),                            spreadRadius: 2, // 그림자 퍼짐 정도                            blurRadius: 3, // 그림자의 흐려짐 정도                            offset: Offset(0, 2), // 그림자의 위치 (x축, y축 이동값)                          )                        ]),                        child: ElevatedButton(                          onPressed: () {},                          style: ElevatedButton.styleFrom(                              fixedSize: Size(mq.width * .5, mq.height * .06),                              backgroundColor: const Color.fromRGBO(255, 135, 81, 1.0),                              padding: EdgeInsets.zero,                              shadowColor: Colors.transparent,                              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15))),                          child: Row(                            crossAxisAlignment: CrossAxisAlignment.center,                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,                            children: [                              Text("    지도 보기", style: TextStyle(color: baseWhite, fontSize: mq.width * .05, fontWeight: FontWeight.w700)),                              SvgPicture.asset('$commonPath/icon/pin_icon.svg')                            ],                          ),                        ),                      )                :                // 커플 미등록 시 커플 등록 버튼                Container(                    decoration: BoxDecoration(borderRadius: BorderRadius.circular(15), boxShadow: const [                      BoxShadow(                        color: Color.fromRGBO(250, 210, 192, 1.0),                        spreadRadius: 2, // 그림자 퍼짐 정도                        blurRadius: 3, // 그림자의 흐려짐 정도                        offset: Offset(0, 2), // 그림자의 위치 (x축, y축 이동값)                      )                    ]),                    child: ElevatedButton(                      onPressed: () {                        Navigator.push(context, MaterialPageRoute(builder: (context) => const SignCoupleScreen()));                      },                      style: ElevatedButton.styleFrom(                          fixedSize: Size(mq.width * .5, mq.height * .06),                          backgroundColor: const Color.fromRGBO(255, 135, 81, 1.0),                          padding: EdgeInsets.zero,                          shadowColor: Colors.transparent,                          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15))),                      child: Row(                        crossAxisAlignment: CrossAxisAlignment.center,                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,                        children: [                          Text("커플 등록하기", style: TextStyle(color: baseWhite, fontSize: mq.width * .05, fontWeight: FontWeight.w700)),                          SvgPicture.asset('$commonPath/icon/add_icon.svg')                        ],                      ),                    ),                  ),          ),        )      ]),    );  }}